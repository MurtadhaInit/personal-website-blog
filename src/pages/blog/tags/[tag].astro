---
import { getCollection, CollectionEntry } from "astro:content";

import Layout from "@layouts/Base.astro";
import PostCard from "@components/PostCard.astro";

import { slugify, filterPosts } from "@utils/utils";
import { getAllTags } from "@utils/TagsUtils";

// generate a static path for each tag
export async function getStaticPaths() {
  const allPosts = await getCollection("blog");
  const filteredPosts = filterPosts(allPosts);

  // a unique set of all tags extracted from posts
  const allTags = getAllTags(filteredPosts);

  // generate a path for each tag, the props is all posts including that tag
  return allTags.map((tag) => {
    // all posts associated with this tag
    const tagPosts = filteredPosts.filter((post) =>
      post.data.tags.includes(tag),
    );

    return {
      params: { tag: slugify(tag) },
      props: {
        tag: tag,
        posts: tagPosts,
      },
    };
  });
}

interface Props {
  tag: CollectionEntry<"blog">["data"]["tags"][number];
  posts: CollectionEntry<"blog">[];
}

const { tag, posts } = Astro.props;
---

<Layout title={tag}>
  <section aria-label=`Posts about ${tag}`>
    <h1>Posts about <span>{tag}</span></h1>
    <div>
      {posts.map((post) => <PostCard post={post} maxTags={5} style={"wide"} />)}
    </div>
  </section>
</Layout>
