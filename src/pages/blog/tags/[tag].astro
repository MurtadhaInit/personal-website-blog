---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

import Layout from "@layouts/Base.astro";
import PostCard from "@components/PostCard.astro";

import { slugify, filterPosts } from "@utils/utils";
import { getAllTags } from "@utils/TagsUtils";

// generate a static path for each tag
export const getStaticPaths = async () => {
  const allPosts = await getCollection("blog");
  const filteredPosts = filterPosts(allPosts);
  // a unique set of all tags extracted from posts
  const allTags = getAllTags(filteredPosts);

  // generate a path for each tag
  return allTags.map((tag) => {
    // all posts associated with this tag
    const tagPosts = filteredPosts.filter((post) =>
      post.data.tags.includes(tag),
    );

    return {
      params: { tag: slugify(tag) },
      props: {
        tag: tag,
        posts: tagPosts,
      },
    };
  });
};

interface Props {
  tag: CollectionEntry<"blog">["data"]["tags"][number];
  posts: CollectionEntry<"blog">[];
}

const { tag, posts } = Astro.props as Props;
---

<Layout title={tag}>
  <main class="mx-auto my-16 max-w-5xl">
    <section class="mx-8" aria-label=`Posts about ${tag}`>
      <h1 class="mb-8 text-4xl text-theme-light-text dark:text-theme-dark-text">
        Posts about {tag}
      </h1>
      <ul class="space-y-8">
        {
          posts.map((post) => (
            <li>
              <PostCard post={post} maxTags={5} />
            </li>
          ))
        }
      </ul>
    </section>
  </main>
</Layout>
